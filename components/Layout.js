import React, { useContext, useState, useEffect, Fragment } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { Store } from '../utils/Store';
import { ToastContainer } from 'react-toastify';
import { signOut, useSession } from 'next-auth/react';
import 'react-toastify/dist/ReactToastify.css';
import { Menu, Transition } from '@headlessui/react';
import DropdownLink from './DropdownLink';
import Cookies from 'js-cookie';
import Slideshow from './Slideshow';
import { CgProfile } from 'react-icons/cg';
import { RiAdminFill } from 'react-icons/ri';
import { FaListAlt } from 'react-icons/fa';
import { MdOutlineLogout } from 'react-icons/md';

const Layout = ({ title, children }) => {
  const { status, data: session } = useSession();
  const { state, dispatch } = useContext(Store);
  const { cart } = state;
  const [cartItemsCount, setCartItemsCount] = useState(0);

  useEffect(() => {
    setCartItemsCount(cart.cartItems.reduce((a, c) => a + c.quantity, 0));
  }, [cart.cartItems]);

  const logoutClickHandler = () => {
    Cookies.remove('cart');
    dispatch({ type: 'CART_RESET' });
    signOut({ callbackUrl: '/login' });
  };

  return (
    <>
      <Head>
        <title>{title ? title + '- Jupiter' : 'Jupiter'}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ToastContainer position="bottom-center" limit={1} />
      <div className="flex min-h-screen flex-col justify-between">
        <header>
          <nav className="flex h-12 items-center p-4 justify-between shadow-md">
            <Link href="/">
              <a className="text-lg font-bold">Jupiter</a>
            </Link>
            <div>
              <Link href="/cart">
                <a className="p-2">
                  Cart{' '}
                  {cartItemsCount > 0 && (
                    <span className="ml-1 rounded-full bg-red-600 px-2 py-1 text-xs font-bold text-white">
                      {cartItemsCount}
                    </span>
                  )}
                </a>
              </Link>
              {status === 'loading' ? (
                'Loading'
              ) : session?.user ? (
                <Menu as="div" className="relative inline-block z-50">
                  <Menu.Button className="text-[#00509d]">
                    {session.user.name}
                  </Menu.Button>
                  <Transition
                    as={Fragment}
                    enter="transition ease-out duration-100"
                    enterFrom="transform opacity-0 scale-95"
                    enterTo="transform opacity-100 scale-100"
                    leave="transition ease-in duration-75"
                    leaveFrom="transform opacity-100 scale-100"
                    leaveTo="transform opacity-0 scale-95">
                    <Menu.Items className="absolute right-0 w-56 origin-top-right bg-white  shadow-lg rounded-md p-2">
                      <Menu.Item>
                        <DropdownLink
                          className="dropdown-link flex items-center gap-2 "
                          href="/profile">
                          <CgProfile />
                          Profile
                        </DropdownLink>
                      </Menu.Item>
                      <Menu.Item>
                        <DropdownLink
                          className="dropdown-link flex items-center gap-2"
                          href="/order-history">
                          <FaListAlt />
                          Order History
                        </DropdownLink>
                      </Menu.Item>
                      {session.user.isAdmin && (
                        <Menu.Item>
                          <DropdownLink
                            className="dropdown-link flex items-center gap-2"
                            href="/admin/dashboard">
                            <RiAdminFill />
                            Admin Dashboard
                          </DropdownLink>
                        </Menu.Item>
                      )}
                      <Menu.Item>
                        <a
                          className="dropdown-link flex items-center gap-2"
                          href="#"
                          onClick={logoutClickHandler}>
                          <MdOutlineLogout />
                          Logout
                        </a>
                      </Menu.Item>
                    </Menu.Items>
                  </Transition>
                </Menu>
              ) : (
                <Link href="/login">
                  <a className="p-2">Login</a>
                </Link>
              )}
            </div>
          </nav>
        </header>
        <Slideshow />
        <main className="container m-auto mt-4 px-4">{children}</main>
        <footer className="flex justify-center items-center h-10 shadow-inner ">
          <p>CopyRight &copy; 2022 Jupiter </p>
        </footer>
      </div>
    </>
  );
};

export default Layout;
